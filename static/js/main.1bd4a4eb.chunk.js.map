{"version":3,"sources":["Home.js","Movie.js","MoviesContext.js","AddMovie.js","MovieListing.js","Nav.js","About.js","Recipe.js","RecipeListing.js","BreakingBad.js","BreakingBadCharacter.js","App.js","serviceWorker.js","index.js"],"names":["Home","Movie","name","info","className","width","MoviesContext","createContext","MovieProvider","props","useState","id","movies","setMovies","Provider","value","children","AddMovie","useContext","setName","setInfo","onSubmit","e","preventDefault","console","log","oldMovies","length","type","placeholder","onChange","target","MovieListing","map","movie","key","Nav","style","color","to","process","About","Recipe","title","calories","image","link","src","href","rel","RecipeListing","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","aria-describedby","recipe","label","url","BreakingBad","characters","setCharacters","fetchCharacters","allCharacters","chars","char","char_id","BreakingBadCharacter","match","character","setCharacter","fetchCharacter","params","charInfo","portrayed","nickname","img","alt","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bd4a4eb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (\n    <div>\n      <h3>This is a experimental React Learning app</h3>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Movie = ({ name, info }) => {\n  return (\n    <div className='col-sm-6 mt-1 align-centre'>\n      <div className='card' width='18rem'>\n        <div className='card-body'>\n          <h3 className='card-title'>{name}</h3>\n          <p className='card-text'>{info}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import React, { useState, createContext } from 'react';\n\nexport const MoviesContext = createContext();\n\nexport const MovieProvider = (props) => {\n  const [movies, setMovies] = useState([\n    {\n      name: 'Movie 1',\n      info: 'Some More info',\n      id: '1',\n    },\n    {\n      name: 'Movie 2',\n      info: 'Some More info',\n      id: '2',\n    },\n    {\n      name: 'Movie 3',\n      info: 'Some More info',\n      id: '3',\n    },\n    {\n      name: 'Movie 4',\n      info: 'Some More info',\n      id: '4',\n    },\n  ]);\n\n  return (\n    <MoviesContext.Provider value={[movies, setMovies]}>\n      {props.children}\n    </MoviesContext.Provider>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { MoviesContext } from './MoviesContext';\n\nconst AddMovie = () => {\n  const [movies, setMovies] = useContext(MoviesContext);\n  const [name, setName] = useState('');\n  const [info, setInfo] = useState('');\n\n  const updateName = (e) => {\n    setName(e.target.value);\n  };\n  const updateInfo = (e) => {\n    setInfo(e.target.value);\n  };\n\n  const addMovie = (e) => {\n    e.preventDefault();\n    console.log(movies);\n\n    setMovies((oldMovies) => [\n      ...oldMovies,\n      { name: name, info: info, id: oldMovies.length + 1 },\n    ]);\n  };\n  return (\n    <div className='row justify-content-center align-items-center form-group mt-2'>\n      <form onSubmit={addMovie}>\n        <div className='input-group-append' id='button-addon4'>\n          <input\n            type='text'\n            className='col-md-4 form-control'\n            value={name}\n            placeholder='Movie Name'\n            onChange={updateName}\n          />\n          <input\n            type='text'\n            className='col-md-4 form-control ml-2'\n            value={info}\n            placeholder='Movie Information'\n            onChange={updateInfo}\n          />\n          <button className='form-control btn btn-primary ml-2' type='submit'>\n            Add Movie\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddMovie;\n","import React, { useContext } from 'react';\nimport Movie from './Movie';\nimport AddMovie from './AddMovie';\nimport { MoviesContext } from './MoviesContext';\n\nconst MovieListing = () => {\n  const [movies, setMovies] = useContext(MoviesContext);\n\n  return (\n    <div>\n      <AddMovie />\n      <div className='container'>\n        <div className='row justify-content-center align-items-center'>\n          {movies.map((movie) => (\n            <Movie name={movie.name} key={movie.id} info={movie.info} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieListing;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MoviesContext } from './MoviesContext';\n\nconst Nav = () => {\n  const navStyle = {\n    color: 'black',\n  };\n  const [movies, setMovies] = useContext(MoviesContext);\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n      <div className='collapse navbar-collapse' id='navbarNav'>\n        <Link style={navStyle} to={`${process.env.PUBLIC_URL}/`}>\n          <h3>Experiments</h3>\n        </Link>\n        <ul className='navbar-nav ml-auto'>\n          <Link to={`${process.env.PUBLIC_URL}/movies`}>\n            <li className='nav-item'>\n              <span className='nav-link'>Movies: {movies.length}</span>\n            </li>\n          </Link>\n          <Link to={`${process.env.PUBLIC_URL}/recipe-listing`}>\n            <li className='nav-item'>\n              <span className='nav-link'>Recipe listings</span>\n            </li>\n          </Link>\n          <Link to={`${process.env.PUBLIC_URL}/about`}>\n            <li className='nav-item'>\n              <span className='nav-link'>About</span>\n            </li>\n          </Link>\n          <Link to={`${process.env.PUBLIC_URL}/breaking-bad`}>\n            <span className='nav-link'>BreakingBad</span>\n          </Link>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className='About'>\n      <h1>About Page</h1>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Recipe = ({ title, calories, image, link }) => {\n  return (\n    <div className='col-sm-6 mt-1'>\n      <div className='card' width='18rem'>\n        <div className='card-body'>\n          <h3 className='card-title'>{title}</h3>\n          <p className='card-text'>{calories}</p>\n          <img src={image} className='img-thumbnail' />\n          <br />\n          <br />\n          <a\n            href={link}\n            target='_blank'\n            rel='noopener noreferrer'\n            className='btn btn-primary'\n          >\n            Go to Website\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\n\nconst RecipeListing = () => {\n  const APP_ID = '11cbe344';\n  const APP_KEY = '797e46b298abfd26de41839921b778f1';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('paneer');\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    console.log(search);\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return (\n    <div className='row justify-content-center align-items-center'>\n      <form onSubmit={getSearch} className='search-form'>\n        <div className='input-group-append' id='button-addon4'>\n          <input\n            type='text'\n            className='search-bar form-control'\n            value={search}\n            onChange={updateSearch}\n            aria-describedby='button-addon4'\n          />\n          <button\n            className='search-btn btn btn-outline-secondary ml-3'\n            placeholder='Search Recipe'\n            type='submit'\n          >\n            Search\n          </button>\n        </div>\n      </form>\n      <div className='row mt-1 mr-1 ml-1'>\n        {recipes.map((recipe) => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            link={recipe.recipe.url}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeListing;\n","// https://breakingbadapi.com/documentation\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BreakingBad = () => {\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n\n  const fetchCharacters = async () => {\n    const allCharacters = await fetch(\n      `https://www.breakingbadapi.com/api/characters`\n    );\n    const chars = await allCharacters.json();\n    setCharacters(chars);\n    console.log(chars);\n  };\n\n  return (\n    <div className='BreakingBad'>\n      <h1>Few Characters:</h1>\n      {characters.map(char => (\n        <Link to={`${process.env.PUBLIC_URL}/breaking-bad/${char.char_id}`}>\n          <span key={char.char_id}>{char.name}</span>\n          <br />\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default BreakingBad;\n","// https://breakingbadapi.com/documentation\n\nimport React, { useState, useEffect } from 'react';\nconst BreakingBadCharacter = ({ match }) => {\n  const [character, setCharacter] = useState({});\n  useEffect(() => {\n    fetchCharacter();\n  }, []);\n\n  const fetchCharacter = async () => {\n    const character = await fetch(\n      `https://www.breakingbadapi.com/api/characters/${match.params.id}`\n    );\n    const charInfo = await character.json();\n    setCharacter(charInfo);\n    console.log(charInfo);\n  };\n\n  return (\n    <div className='BreakingBadCharacter'>\n      <h1>\n        {character.name} played by {character.portrayed}\n      </h1>\n      <h3>{character.nickname}</h3>\n      <img src={character.img} alt='' />\n    </div>\n  );\n};\n\nexport default BreakingBadCharacter;\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport MovieListing from './MovieListing';\nimport { MovieProvider } from './MoviesContext';\nimport Nav from './Nav';\nimport About from './About';\nimport RecipeListing from './RecipeListing';\nimport BreakingBad from './BreakingBad';\nimport BreakingBadCharacter from './BreakingBadCharacter';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className='App'>\n        <MovieProvider>\n          <Nav />\n          <Switch>\n            <Route path={`${process.env.PUBLIC_URL}/`} exact component={Home} />\n            <Route\n              path={`${process.env.PUBLIC_URL}/movies`}\n              exact\n              component={MovieListing}\n            />\n            <Route\n              path={`${process.env.PUBLIC_URL}/about`}\n              exact\n              component={About}\n            />\n            <Route\n              path={`${process.env.PUBLIC_URL}/breaking-bad`}\n              exact\n              component={BreakingBad}\n            />\n            <Route\n              path={`${process.env.PUBLIC_URL}/breaking-bad/:id`}\n              exact\n              component={BreakingBadCharacter}\n            />\n            <Route\n              path={`${process.env.PUBLIC_URL}/recipe-listing`}\n              exact\n              component={RecipeListing}\n            />\n          </Switch>\n        </MovieProvider>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated pre cached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}